@page "/inputs"
@using Bogus
@using MoonCore.Blazor.Tailwind.Test.Models
@using MoonCore.Blazor.Tailwind.Inputs

<h3>Inputs</h3>
@*
<InputItemSelect @bind-Value="InputSelectIdValue"
                 TItem="DemoDataModel"
                 TProperty="int"
                 DisplayProperty="@(x => x.Email)"
                 ValueProperty="@(x => x?.Id ?? -1)"
                 ItemLoader="ItemSelectLoader"/>*@

<InputItemSelect TItem="DemoDataModel"
                 TProperty="int"
                 AllowNone="true"
                 Loader="ItemSelectLoader"
                 DisplayProperty="@(x => x.Email)"
                 ValueProperty="@(x => x?.Id ?? -1)"
                 @bind-Value="InputSelectIdValue"/>

<InputItemSearchSelect TItem="DemoDataModel"
                       TProperty="int"
                       AllowNone="true"
                       Loader="Loader"
                       DisplayProperty="@(x => x.Email)"
                       ValueProperty="@(x => x?.Id ?? -1)"
                       @bind-Value="InputSearchSelectIdValue"/>

<InputEnumSelect TProperty="SomeCoolEnum"
                 @bind-Value="CoolEnum"/>

<InputCustomSelect TValue="string" @bind-Value="CustomSelectValue">
    <CustomSelectOption Value="@("ghghghg")">
        <Template>
            aaaaaaa
        </Template>
    </CustomSelectOption>
    <CustomSelectOption Value="@("bbbbbbbb")">
        <Template>
            bbbbbbb
        </Template>
    </CustomSelectOption>
</InputCustomSelect>

<InputCustomSelect TValue="bool" @bind-Value="Visibility">
    <CustomSelectOption Value="false">
        <Template>
            <span>
                <i class="icon-lock me-1 align-middle"></i>
                <span class="align-middle">Only you</span>
            </span>
        </Template>
    </CustomSelectOption>
    <CustomSelectOption Value="true">
        <Template>
            <span>
                <i class="icon-globe me-1 align-middle"></i>
                <span class="align-middle">Anyone</span>
            </span>
        </Template>
    </CustomSelectOption>
</InputCustomSelect>

<div class="mt-10">
    <InputMultiSelect TItem="DemoDataModel"
                      TProperty="int"
                      @bind-Value="SelectedIds"
                      DisplayProperty="@(x => x.Email)"
                      ValueProperty="@(x => x.Id)"
                      Loader="ItemSelectLoader"/>
</div>

@code
{
    private int InputSelectIdValue = -1;
    private int InputSearchSelectIdValue = -1;
    private SomeCoolEnum CoolEnum;
    private string CustomSelectValue;
    private bool Visibility;

    private int[] SelectedIds;

    private static List<DemoDataModel>? Data;

    protected override void OnInitialized()
    {
        if (Data == null)
        {
            var faker = new Faker<DemoDataModel>()
                .RuleFor(x => x.Id, x => x.UniqueIndex)
                .RuleFor(x => x.Email, x => x.Person.Email)
                .RuleFor(x => x.Flag, x => x.Random.Bool())
                .RuleFor(x => x.Name, x => x.Person.UserName);

            Data = faker
                .Generate(25);
        }
    }

    private async Task<DemoDataModel[]> ItemSelectLoader()
    {
        await Task.Delay(TimeSpan.FromSeconds(3));
        return Data!.ToArray();
    }

    private async Task<DemoDataModel[]> Loader(string arg)
    {
        await Task.Delay(TimeSpan.FromSeconds(1));
        return Data!.Where(x => x.Email.StartsWith(arg)).ToArray();
    }
}