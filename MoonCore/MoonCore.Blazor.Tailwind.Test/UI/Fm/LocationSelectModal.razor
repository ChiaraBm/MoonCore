@using MoonCore.Blazor.Tailwind.Modals.Components
@using MoonCore.Blazor.Tailwind.Components
@using MoonCore.Blazor.Tailwind.States

@inherits BaseModal

<h1 class="mb-5 font-semibold text-xl">Select a location</h1>

<div class="rounded-lg bg-gray-800">
    <FileList @ref="FileList"
              InitialPath="@InitialPath"
              EntriesFilter="EntriesFilter"
              EnableHeaderRounding="true"
              ShowDate="false"
              ShowSize="false"
              OnInteract="OnInteract"
              FileSystemProvider="FileSystemProvider">
        <GoUpTemplate>
            <tr class="border-b border-gray-700">
                <td>
                    <div class="flex justify-center">
                        <i class="icon-corner-left-up text-2xl text-primary-500"></i>
                    </div>
                </td>
                <td class="px-6 py-4" colspan="20">
                    <a href="#" class="hover:text-white" @onclick="FileList.GoUp"
                       @onclick:preventDefault>
                        Go to parent directory
                    </a>
                </td>
            </tr>
        </GoUpTemplate>
        <NoFilesTemplate>
            <StateDisplay Title="No folders found"
                          Description="No folders in the selected directory found"
                          Icon="icon-folder-open"
                          IconColor="text-primary-500"
                          Type="StateType.Custom"/>
        </NoFilesTemplate>
    </FileList>
</div>

<div class="mt-5 flex space-x-2">
    <WButton OnClick="_ => Hide()" CssClasses="btn btn-secondary grow">Cancel</WButton>
    <WButton OnClick="_ => Submit()" CssClasses="btn btn-primary grow">Select</WButton>
</div>

@code
{
    [Parameter] public IFileSystemProvider FileSystemProvider { get; set; }
    [Parameter] public string InitialPath { get; set; } = "/";
    [Parameter] public Func<string, Task> OnSubmit { get; set; }

    private FileList FileList;
    private string Path;

    protected override void OnInitialized()
    {
        Path = InitialPath;
    }

    private async Task Submit()
    {
        await OnSubmit.Invoke(Path);
        await Hide();
    }

    private async Task OnInteract(FileSystemEntry entry)
    {
        await FileList.GoIn(entry.Name);
        Path = FileList.CurrentPath;
    }

    private IEnumerable<FileSystemEntry> EntriesFilter(IEnumerable<FileSystemEntry> entries)
        => entries.Where(x => !x.IsFile);
}
