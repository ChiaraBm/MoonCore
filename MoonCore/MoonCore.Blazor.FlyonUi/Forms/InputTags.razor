<div class="input p-1 text-sm flex flex-wrap w-full gap-y-1">
    @foreach (var tag in Value)
    {
        <div href="#"
           @onclick:preventDefault
           @onclick="() => RemoveTag(tag)"
           class="bg-primary rounded-lg py-1 px-1.5 me-1 cursor-pointer flex items-center">
            @tag
        </div>
    }
    <input @onkeyup="OnKeyUp"
           @bind="InputField"
           @bind:event="oninput"
           type="text"
           class="min-w-0 bg-transparent placeholder-base-content/60 focus:outline-none focus:ring-0 border-transparent text-sm p-1"
           placeholder="Enter..."/>
</div>

@code
{
    [Parameter]
    public List<string> Value { get; set; } = new();
    
    private string InputField = "";

    private async Task RemoveTag(string tag)
    {
        Value.Remove(tag);
        await InvokeAsync(StateHasChanged);
    }

    private async Task OnKeyUp(KeyboardEventArgs keyboardEventArgs)
    {
        if (keyboardEventArgs.Code != "Space" && keyboardEventArgs.Code != "Enter")
            return;
        
        var value = InputField.Trim();

        if (string.IsNullOrEmpty(value))
            return;

        if (Value.Contains(value))
            return;

        Value.Add(value);
        
        InputField = "";
        await InvokeAsync(StateHasChanged);
    }
}