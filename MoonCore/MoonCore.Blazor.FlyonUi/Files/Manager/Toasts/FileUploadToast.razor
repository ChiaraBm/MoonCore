@using MoonCore.Blazor.FlyonUi.Toasts.Components

@inherits BaseToast

<div class="flex-shrink-0 flex items-center">
    @switch (CurrentTaskType)
    {
        case TaskType.Progressing:
            <div class="radial-progress text-primary text-xs bg-base-200" style="--value: @(Percent); --size: 3rem"
                 role="progressbar" aria-label="Primary Radial Progressbar">
                @(Percent)%
            </div>
            break;

        case TaskType.Combining:
            <i class="icon-combine text-2xl text-primary"></i>
            break;
    }
</div>
<div class="ml-3 w-0 pt-0.5 flex-1">
    <p class="text-sm font-medium text-base-content">
        @switch (CurrentTaskType)
        {
            case TaskType.Progressing:
                <span>Uploading...</span>
                break;
            case TaskType.Combining:
                <span>Combining chunks...</span>
                break;
        }
    </p>
    <p class="mt-1 text-sm text-base-content/80">
        @switch (CurrentTaskType)
        {
            case TaskType.Progressing when string.IsNullOrEmpty(File):
                <span>Preparing</span>
                break;
            case TaskType.Progressing:
                <span>@File</span>
                break;
            case TaskType.Combining:
                <span>Please be patient</span>
                break;
        }
    </p>
</div>

@code
{
    [Parameter] public string? File { get; set; }
    [Parameter] public int Percent { get; set; }
    [Parameter] public Func<FileUploadToast, Task> Callback { get; set; }

    private TaskType CurrentTaskType = TaskType.Progressing;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        await Callback.Invoke(this);
        await Hide();
    }

    public async Task SetProgress(string file, int percent)
    {
        CurrentTaskType = TaskType.Progressing;
        File = file;
        Percent = percent;

        await InvokeAsync(StateHasChanged);
    }

    public async Task SetCombining()
    {
        CurrentTaskType = TaskType.Combining;
        await InvokeAsync(StateHasChanged);
    }

    private enum TaskType
    {
        Progressing,
        Combining
    }
}