@page "/feedback/modals"
@using MoonCore.Blazor.FlyonUi.Components
@using MoonCore.Blazor.FlyonUi.Modals
@using MoonCore.Blazor.FlyonUi.Test.Frontend.UI.Components

@inject ModalService ModalService

<NavTabs Index="1" Names="UiConstants.FeedbackNames" Links="UiConstants.FeedbackLinks" />

<div class="mt-5">
    <button @onclick="LaunchCustom" class="btn btn-primary me-2">Launch custom</button>
    <button @onclick="LaunchMultiLayer" class="btn btn-primary">Launch multi layer</button>
</div>

@code
{
    private async Task LaunchCustom()
    {
        await ModalService.LaunchAsync<CustomModal>(allowUnfocusHide: true, size: "max-w-7xl");
    }

    private async Task LaunchMultiLayer()
    {
        await ModalService.LaunchAsync<MultiLayerModal>(layer1Params =>
        {
            layer1Params["Text"] = "Layer 1";
            layer1Params["FillerCount"] = 1;
            layer1Params["HandleNext"] = async () =>
            {
                await ModalService.LaunchAsync<MultiLayerModal>(layer2Params =>
                {
                    layer2Params["Text"] = "Layer 2";
                    layer2Params["FillerCount"] = 2;
                    layer2Params["HandleNext"] = async () =>
                    {
                        await ModalService.LaunchAsync<MultiLayerModal>(layer3Params =>
                        {
                            layer3Params["Text"] = "Layer 3";
                            layer3Params["FillerCount"] = 3;
                            layer3Params["HandleNext"] = null;
                        }, allowUnfocusHide: true);
                    };
                }, allowUnfocusHide: true);
            };
        }, allowUnfocusHide: true);
    }
}
