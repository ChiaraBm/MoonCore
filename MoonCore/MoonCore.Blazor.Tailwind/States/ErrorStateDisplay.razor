@using MoonCore.Exceptions

<div class="flex items-center justify-center">
    <div class="flex flex-col text-center">
        <i class="@Icon @IconColor text-2xl"></i>

        <div class="text-lg font-semibold">
            @Title
        </div>

        <div class="text-base text-secondary">
            @Description
        </div>
    </div>
</div>

@code
{
    [Parameter] public Exception Exception { get; set; }

    private string Title;
    private string Description;
    private string Icon;
    private string IconColor = "text-secondary";

    protected override void OnParametersSet()
    {
        if (Exception is HttpApiException httpApiException)
        {
            Description = string.IsNullOrEmpty(httpApiException.Detail)
                ? httpApiException.Title
                : $"{httpApiException.Title}: {httpApiException.Detail}";

            if (httpApiException.Status == 403)
            {
                Title = "Forbidden";
                Icon = "icon-ban";
                IconColor = "text-warning";
            }
            else if (httpApiException.Status == 400)
            {
                Title = "Bad Request";
                Icon = "icon-puzzle";
                IconColor = "text-danger";
            }
            else if (httpApiException.Status == 500)
            {
                Title = "Internal Server Error";
                Icon = "icon-server-crash";
                IconColor = "text-danger";
            }
            else if (httpApiException.Status == 502)
            {
                Title = "Bad Gateway";
                Icon = "icon-cable";
                IconColor = "text-danger";
            }
            else
            {
                Title = "API Error";
                Icon = "icon-mail-warning";
                IconColor = "text-warning";
            }
        }
        else if (Exception is HttpRequestException httpRequestException)
        {
            if (httpRequestException.Message.Contains("Failed to fetch", StringComparison.InvariantCultureIgnoreCase))
            {
                Title = "No Connection";
                Icon = "icon-cable";
                Description = "Unable to connect to the requested resource";
                IconColor = "text-danger";
            }
            else
            {
                Title = "Request Error";
                Icon = "icon-cable";
                Description = httpRequestException.Message;
                IconColor = "text-danger";
            }
        }
        else
        {
            Title = "Application Error";
            Description = "An unhandled error occured in the application";
            Icon = "icon-flame";
            IconColor = "text-danger";
        }
    }
}
