<nav class="flex">
    <ol class="inline-flex items-center space-x-0.5 md:space-x-2">
        @if (ShowHome)
        {
            <li class="inline-flex items-center">
                @if (IsClickable)
                {
                    <a href="#" @onclick="@(() => HandleClick("/"))" @onclick:preventDefault
                       class="inline-flex items-center text-sm font-medium text-gray-400 hover:text-white">
                        <i class="icon-hard-drive text-lg me-2.5"></i>
                        Home
                    </a>
                }
                else
                {
                    <span class="inline-flex items-center text-sm font-medium text-gray-400">
                        <i class="icon-hard-drive text-lg me-2.5"></i>
                        Home
                    </span>
                }
            </li>
        }

        @{
            var path = Path;
            var pathParts = path.Split("/");
        }

        @for (var i = 1; i < pathParts.Length; i++)
        {
            var pathName = pathParts[i];
            var currentPath = string.Join("/", pathParts.Take(i + 1));

            if (i == pathParts.Length - 1)
            {
                <li aria-current="page">
                    <div class="flex items-center">
                        <i class="text-gray-400 mx-0.5 icon-chevron-right"></i>
                        <span class="ms-1 text-sm font-medium text-gray-500 md:ms-2 dark:text-gray-400">
                            @pathName
                        </span>
                    </div>
                </li>
            }
            else
            {
                <li>
                    <div class="flex items-center">
                        <i class="text-gray-400 mx-0.5 icon-chevron-right"></i>
                        @if (IsClickable)
                        {
                            <a href="#" @onclick="@(() => HandleClick(currentPath))"
                               @onclick:preventDefault
                               class="ms-1 text-sm font-medium md:ms-2 text-gray-400 hover:text-white">
                                @pathName
                            </a>
                        }
                        else
                        {
                            <span class="ms-1 text-sm font-medium md:ms-2 text-gray-400">
                                @pathName
                            </span>
                        }
                    </div>
                </li>
            }
        }
    </ol>
</nav>

@code
{
    [Parameter] public string Path { get; set; }
    [Parameter] public bool ShowHome { get; set; } = false;
    [Parameter] public Func<string, Task>? OnClick { get; set; }

    private bool IsClickable = false;

    protected override void OnInitialized()
    {
        IsClickable = OnClick != null;
    }

    private async Task HandleClick(string path)
    {
        if (!IsClickable)
            return;

        await OnClick!.Invoke(path);
    }
}
