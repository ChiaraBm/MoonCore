@using System.Reflection
@using MoonCoreUI.Attributes
@using MoonCoreUI.Helpers

@typeparam TForm

@foreach (var kvp in PropertySections)
{
    <div class="card mb-6">
        @if (!string.IsNullOrEmpty(kvp.Key.Item1))
        {
            <div class="card-header">
                <div class="card-title">
                    @if (!string.IsNullOrEmpty(kvp.Key.Item2))
                    {
                        <i class="bx bx-md @(kvp.Key.Item2) text-primary me-3 align-middle"></i>
                    }
                    <span class="h3 align-middle">@(kvp.Key.Item1)</span>
                </div>
            </div>
        }
        <div class="card-body">
            <div class="row g-8">
                @foreach (var prop in kvp.Value)
                {
                    var typeToCreate = typeof(AutoProperty<>).MakeGenericType(prop.PropertyType);
                    var rf = ComponentHelper.FromType(typeToCreate, parameters =>
                    {
                        parameters.Add("Data", Model);
                        parameters.Add("Property", prop);
                        parameters.Add("EnableColumnDetection", true);
                    });

                    @rf
                }
            </div>
        </div>
    </div>
}

@code
{
    [Parameter] public TForm Model { get; set; }

    [Parameter] public int Columns { get; set; } = 6;

    private Dictionary<(string, string), PropertyInfo[]> PropertySections = new();

    protected override void OnInitialized()
    {
        var properties = typeof(TForm).GetProperties();
        var propertiesGrouped = properties.GroupBy(x => GetSectionId(x));

        PropertySections = propertiesGrouped.ToDictionary(x => x.Key, x => x.ToArray());
    }

    private (string, string) GetSectionId(PropertyInfo info)
    {
        var attributes = info.GetCustomAttributes().ToArray();

        if (attributes.All(x => x.GetType() != typeof(SectionAttribute)))
            return (string.Empty, string.Empty);

        var sectionAttribute = attributes.First(x => x.GetType() == typeof(SectionAttribute)) as SectionAttribute;

        if (sectionAttribute == null)
            return (string.Empty, string.Empty);

        return (sectionAttribute.Name, sectionAttribute.Icon);
    }
}