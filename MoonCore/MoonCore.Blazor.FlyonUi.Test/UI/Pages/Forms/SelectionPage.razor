@page "/forms/selections"
@using MoonCore.Blazor.FlyonUi.Forms
@using MoonCore.Exceptions
@using MoonCore.Blazor.FlyonUi.Components

<NavTabs Index="2" Names="UiConstants.FormsNames" Links="UiConstants.FormsLinks" />

<div class="max-w-sm mt-5">
    <select class="select">
        <option>I</option>
        <option>Dont</option>
        <option>Care</option>
    </select>
</div>

<div class="max-w-sm mt-5">
    <InputItem TItem="DemoItem" @bind-Value="SelectedItem" DisplayField="@(x => x.Name)" ItemSource="ItemSource" />
</div>

<div class="max-w-sm mt-1.5">
    <InputItem TItem="DemoItem" @bind-Value="SelectedItem" DisplayField="@(x => x.Name)" ItemSource="FailingItemSource" />
</div>

<div class="max-w-sm mt-1.5">
    <InputItem TItem="DemoItem" @bind-Value="SelectedItem" DisplayField="@(x => x.Name)" SearchField="@(x => x.Name)" ItemSource="ItemSource" />
</div>

<div class="max-w-sm mt-1.5">
    <InputMultipleItem TItem="DemoItem" Value="SelectedItems" DisplayField="@(x => x.Name)" SearchField="@(x => x.Name)" ItemSource="ItemSource" />
</div>


@code
{
    private DemoItem[] Items;
    private DemoItem? SelectedItem = null;
    private List<DemoItem> SelectedItems = new();

    private async Task<DemoItem[]> ItemSource()
    {
        await Task.Delay(TimeSpan.FromSeconds(2));
        
        return Items;
    }
    
    private async Task<DemoItem[]> FailingItemSource()
    {
        await Task.Delay(TimeSpan.FromSeconds(2));

        throw new HttpApiException("Whoops i failed", 500);
    }

    protected override void OnInitialized()
    {
        var items = new List<DemoItem>();

        for (var i = 0; i < 100; i++)
        {
            items.Add(new DemoItem()
            {
                Id = i,
                Name = $"Item {i}"
            });
        }

        Items = items.ToArray();
    }

    record DemoItem
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }
}
